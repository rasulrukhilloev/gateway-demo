version: '3.4'
services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  postgres-cards:
    container_name: postgres-cards
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=cards
    volumes:
      - postgres-cards:/var/lib/postgresql/cards
    ports:
      - '5433:5432'

  postgres-auth:
    container_name: postgres-auth
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=auth
    volumes:
      - postgres-auth:/var/lib/postgresql/auth
    ports:
      - '5432:5432'

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
      target: development
    depends_on:
      - rabbitmq
    volumes:
      - ./gateway:/usr/src/app
      - gateway-node-modules:/usr/src/app/node_modules
    ports:
      - '3000:3000'

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
      target: development
    env_file:
      - ./auth/.env
    depends_on:
      - rabbitmq
      - postgres-auth
    volumes:
      - ./auth:/usr/src/app
      - auth-node-modules:/usr/src/app/node_modules
    command: >
      sh -c "
      echo 'Waiting for postgres...';
      while ! nc -z postgres-auth 5432; do
        sleep 1;
      done;
      echo 'Postgres is up - executing migration for auth';
      npx prisma migrate deploy && npm run start:dev
      "

  cards:
    build:
      context: ./cards
      dockerfile: Dockerfile
      target: development
    env_file:
      - ./cards/.env
    depends_on:
      - rabbitmq
      - postgres-cards
    volumes:
      - ./cards:/usr/src/app
      - cards-node-modules:/usr/src/app/node_modules
    command: >
      sh -c "
      echo 'Waiting for postgres...';
      while ! nc -z postgres-auth 5432; do
        sleep 1;
      done;
      echo 'Postgres is up - executing migrations for cards';
      npx prisma migrate deploy && npm run start:dev
      "

volumes:
  postgres-auth:
  postgres-cards:
  rabbitmq-data:
  gateway-node-modules:
  cards-node-modules:
  auth-node-modules:
